{"version":3,"sources":["Components/Todo.js","Components/List.js","Components/AddTodo.js","Components/App.js","index.js"],"names":["Todo","props","state","editing","value","inputRef","React","createRef","this","todo","done","className","onClick","setState","onSubmit","e","preventDefault","undefined","trim","onTodoOperation","id","type","spellcheck","onChange","target","onBlur","ref","content","prevProps","prevState","console","log","current","focus","todoRef","date","renderParagraphOrInput","renderEditButton","Component","List","renderList","isDone","indexOfFirstRelevantTodo","todos","map","index","key","i","length","renderUndoneList","renderDoneList","AddTodo","myRef","shrink","placeholder","App","onSubmitTodo","newTodo","now","Date","generateId","toLocaleDateString","toLocaleTimeString","getMilliseconds","join","operation","currentTodos","indexWanted","_","findIndex","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc49d8c4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../CSS/Todo.css\";\r\n\r\nclass Todo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  state = {\r\n    editing: false,\r\n    value: \"\"\r\n  };\r\n\r\n  renderEditButton() {\r\n    if (!this.props.todo.done) {\r\n      return (\r\n        <button\r\n          className=\"todo-edit-button\"\r\n          onClick={() => {\r\n            if (!this.state.editing) {\r\n              this.setState({ editing: true });\r\n            }\r\n          }}\r\n        >\r\n          <i className=\"fas fa-pencil-alt fa-2x\"></i>\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderParagraphOrInput() {\r\n    if (this.state.editing) {\r\n      return (\r\n        <form\r\n          className=\"todo-content-editing-form\"\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            if (\r\n              this.state.value !== undefined &&\r\n              this.state.value.trim() !== \"\"\r\n            ) {\r\n              this.props.onTodoOperation(\r\n                \"edit\",\r\n                this.props.todo.id,\r\n                this.state.value\r\n              );\r\n              this.setState({ editing: false });\r\n            }\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            className=\"todo-content-editing-input\"\r\n            value={this.state.value}\r\n            spellcheck=\"false\"\r\n            onChange={e => this.setState({ value: e.target.value })}\r\n            onBlur={() => {\r\n              this.setState({ editing: false });\r\n            }}\r\n            ref={this.inputRef}\r\n          />\r\n        </form>\r\n      );\r\n    }\r\n    return <p className=\"todo-content\">{this.props.todo.content}</p>;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!prevState.editing && this.state.editing) {\r\n      this.setState({ value: this.props.todo.content });\r\n      console.log(this.state);\r\n      this.inputRef.current.focus();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`todo${this.props.todo.done ? \" done\" : \"\"}`} ref={this.todoRef}>\r\n        <div className=\"todo-main\">\r\n          <p className=\"todo-date\">{this.props.todo.date}</p>\r\n          {this.renderParagraphOrInput()}\r\n        </div>\r\n        <div className=\"todo-button-group\">\r\n          {this.renderEditButton()}\r\n          <button\r\n            className=\"todo-done-button\"\r\n            onClick={() =>\r\n              this.props.onTodoOperation(\"toggleDone\", this.props.todo.id)\r\n            }\r\n          >\r\n            {this.props.todo.done ? (\r\n              <i className=\"fas fa-times fa-2x\"></i>\r\n            ) : (\r\n              <i className=\"fas fa-check fa-2x\"></i>\r\n            )}\r\n          </button>\r\n          <button\r\n            className=\"todo-discard-button\"\r\n            onClick={() =>\r\n              this.props.onTodoOperation(\"remove\", this.props.todo.id)\r\n            }\r\n          >\r\n            <i className=\"fas fa-trash-alt fa-2x\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;\r\n","import React, { Component } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport \"../CSS/List.css\";\r\n\r\nclass List extends Component {\r\n  renderUndoneList() {\r\n    return this.renderList(false);\r\n  }\r\n\r\n  renderDoneList() {\r\n    return this.renderList(true);\r\n  }\r\n\r\n  renderList(isDone) {\r\n    let indexOfFirstRelevantTodo = -1;\r\n    return this.props.todos.map((todo, index) => {\r\n      if (todo.done === isDone) {\r\n        if (indexOfFirstRelevantTodo === -1) {\r\n          indexOfFirstRelevantTodo = index;\r\n        }\r\n        return (\r\n          <>\r\n            {indexOfFirstRelevantTodo === index ? (\r\n              <li className={`list-heading list-heading-${!isDone ? 'un' : ''}done`}>\r\n                <h2>{`${!isDone ? 'Undone' : 'Done'}`}</h2>\r\n              </li>\r\n            ) : null}\r\n            <li key={todo.id} className=\"todo-item\">\r\n              <Todo todo={todo} onTodoOperation={this.props.onTodoOperation} />\r\n            </li>\r\n          </>\r\n        );\r\n      }\r\n      return null;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let doneListNotEmpty = false;\r\n    for (let i = 0; i < this.props.todos.length; i++) {\r\n      if (this.props.todos[i].done) {\r\n        doneListNotEmpty = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"list-complex\">\r\n        <ul className=\"list list-undone\">{this.renderUndoneList()}</ul>\r\n        <ul className=\"list list-done\">{this.renderDoneList()}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\nimport \"../CSS/AddTodo.css\";\r\n\r\nclass AddTodo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  state = {\r\n    value: \"\"\r\n  };\r\n  onChange = e => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.value.trim() !== \"\") {\r\n      this.props.onSubmit(this.state.value);\r\n      this.setState({ value: \"\" });\r\n      this.myRef.current.focus();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={`todo-container ${this.props.shrink ? 'shrink-on-focus-out' : ''}`}>\r\n        <form className=\"todo-form\" onSubmit={this.onSubmit}>\r\n          <span className=\"todo-span\">\r\n            <input\r\n              className={`todo-input ${this.props.shrink ? 'shrink-on-focus-out' : ''}`}\r\n              ref={this.myRef}\r\n              value={this.state.value}\r\n              spellcheck=\"false\"\r\n              onChange={this.onChange}\r\n              // onKeyDown{}\r\n              type=\"text\"\r\n              placeholder=\"Touch Me...\"\r\n            />\r\n          </span>\r\n          <button\r\n            className={`add-todo-button add-todo-button${\r\n              this.state.value !== undefined && this.state.value.trim() !== \"\"\r\n                ? \"-enabled\"\r\n                : \"-disabled\"\r\n            }`}\r\n            type=\"submit\"\r\n          >\r\n            +\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTodo;\r\n","import React, { Component } from \"react\";\nimport List from \"./List\";\nimport AddTodo from \"./AddTodo\";\nimport \"../CSS/App.css\";\n\nimport _ from \"lodash\";\n\nclass App extends Component {\n  state = {\n    todos: []\n  };\n\n  onSubmitTodo = newTodo => {\n    const now = new Date();\n    const id = this.generateId(now);\n    this.setState({\n      todos: [\n        {\n          id: id,\n          date: `${now.toLocaleDateString()} ${now.toLocaleTimeString()}`,\n          content: newTodo,\n          done: false\n        },\n        ...this.state.todos\n      ]\n    });\n  };\n\n  generateId = date => {\n    const id = [date.getMilliseconds(), date.toLocaleDateString()].join(\"\");\n\n    return id;\n  };\n\n  onTodoOperation = (operation, id, content = null) => {\n    const currentTodos = [...this.state.todos];\n    const indexWanted = _.findIndex(currentTodos, todo => todo.id === id);\n    if (operation === \"edit\") {\n      currentTodos[indexWanted].content = content;\n    } else if (operation === \"toggleDone\") {\n      currentTodos[indexWanted].done = !currentTodos[indexWanted].done;\n    } else {\n      currentTodos.splice(indexWanted, 1);\n    }\n\n    this.setState({\n      todos: currentTodos\n    });\n  };\n  // onToggleDone = id => {\n  //\n  //     .done;\n  //   this.setState({\n  //     todos: currentTodos //[].concat(currentTodos)\n  //   });\n  // };\n\n  // onTodoRemoveClick = id => {\n  //   const currentTodos = [...this.state.todos];\n  //   const indexToRemove = _.findIndex(currentTodos, todo => todo.id == id);\n  //\n\n  // };\n\n  // onTodoEditClick = (id, content) => {\n  //   const currentTodos = [...this.state.todos];\n  //   const indexToRemove = _.findIndex(currentTodos, todo => todo.id == id);\n  //\n\n  //   this.setState({\n  //     todos: currentTodos\n  //   });\n\n  // }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <AddTodo onSubmit={this.onSubmitTodo} shrink={this.state.todos.length ? true : false} />\n        {this.state.todos.length !== 0 ? (\n          <List\n            onTodoOperation={this.onTodoOperation}\n            todos={this.state.todos}\n          />\n        ) : (\n          <div className=\"heading-container\">\n            <h1 className=\"heading\">Todo List</h1>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}